{"version":3,"file":"static/js/575.b94a6724.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.jsx","commonStyles/coommonStyles.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactListItem/ContactListItem.styled.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/ContactsPage.js"],"sourcesContent":["// import { statusFilters } from './constants';\nimport { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectvisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filterName) => {\n    return contacts.items.filter(contact =>\n      contact.name.toLowerCase().includes(filterName.toLowerCase().trim())\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.space[5]}px;\n`;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  width: 250px;\n  line-height: ${p => p.theme.lineHeights.body};\n  color: ${p => p.theme.colors.gray};\n  @media screen and (max-width: 480px) {\n    width: 230px;\n  }\n`;\n\nexport const Input = styled.input`\n  padding: ${p => p.theme.space[3]}px;\n  border: ${p => p.theme.borders.normal};\n  border-radius: ${p => p.theme.radii.normal};\n  outline: none;\n  transition: transform 250ms linear, border-color 250ms linear,\n    color 250ms linear;\n\n  :hover,\n  :focus-visible {\n    color: ${p => p.theme.colors.text};\n    border-color: ${p => p.theme.colors.primary};\n    transform: scale(1.1);\n  }\n`;\n\nexport const Button = styled.button`\n  padding: ${p => p.theme.space[3]}px;\n  border-radius: ${p => p.theme.radii.normal};\n  border: ${p => p.theme.borders.normal};\n  background-color: ${p => p.theme.colors.primary};\n  cursor: pointer;\n  min-width: 120px;\n  display: flex;\n  gap: 10px;\n  align-items: center;\n  justify-content: center;\n  transition: transform 250ms linear, border-color 250ms linear,\n    color 250ms linear;\n  :focus,\n  :hover,\n  :focus-visible {\n    transform: scale(1.1);\n  }\n  @media screen and (max-width: 480px) {\n    min-width: 70px;\n    /* padding: ${p => p.theme.space[2]}px; */\n    font-size: ${p => p.theme.fontSizes.xs};\n    gap: 5px;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nimport { Form } from './ContactForm.styled';\nimport { Input, Label, Button } from 'commonStyles/coommonStyles.styled';\nimport { FaPhoneSquareAlt } from 'react-icons/fa';\n// import { nanoid } from '@reduxjs/toolkit';\n\nexport default function ContactForm() {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  //  console.log('first')\n  const handleSubmit = e => {\n    e.preventDefault();\n    const name = e.target.name.value;\n    const number = e.target.number.value;\n\n    const repeatingName = contacts.items.find(contact => contact.name === name);\n\n    if (repeatingName) {\n      alert(`${name} is already in contacts.`);\n      return null;\n    }\n    const newContact = {\n      // id: '',\n      name,\n      number,\n    };\n\n    dispatch(addContact(newContact));\n    e.target.reset();\n  };\n\n  return (\n    <Form className=\"form\" onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          // value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          // value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\">\n        <FaPhoneSquareAlt /> Add contact\n      </Button>\n    </Form>\n  );\n}\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.space[4]}px;\n`;\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  gap: ${p => p.theme.space[6]}px;\n  font-weight: ${p => p.theme.fontWeights.bold};\n  @media screen and (max-width: 480px) {\n    font-size: ${p => p.theme.fontSizes.s};\n    gap: ${p => p.theme.space[3]}px;\n  }\n`;\nexport const ItemName = styled.span`\n  /* max-width: 200px; */\n  /* overflow-wrap: break-word; */\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n  @media screen and (max-width: 480px) {\n    inline-size: 165px;\n  }\n`;\n\nexport const ContactWrap = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  gap: ${p => p.theme.space[2]}px;\n  /* align-items: center; */\n  /* justify-content: space-between; */\n  justify-content: space-between;\n`;\n","import { Button } from 'commonStyles/coommonStyles.styled';\nimport { ContactWrap, Item, ItemName } from './ContactListItem.styled';\nimport { FaPhoneAlt, FaUserAlt, FaTrash } from 'react-icons/fa';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport PropTypes from 'prop-types';\n// import { Box } from 'commonStyles/Box';\n\nconst ContactListItem = ({ id, number, name }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Item key={id}>\n      <ContactWrap>\n        <ItemName>\n          <FaUserAlt fill=\"orange\" /> {name}:\n        </ItemName>\n        <span>\n          <FaPhoneAlt fill=\"orange\" /> {number}\n        </span>\n      </ContactWrap>\n      <Button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n        <FaTrash /> Delete\n      </Button>\n    </Item>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactListItem;\n","import { List } from './ContactList.styled';\nimport ContactListItem from '../ContactListItem/ContactListItem';\n\nimport { useSelector } from 'react-redux';\nimport { selectvisibleContacts } from 'redux/contacts/selectors';\n\nconst ContactList = () => {\n  // console.log('object');\n  const contacts = useSelector(selectvisibleContacts);\n\n  return (\n    <List>\n      {contacts.map(({ id, number, name }) => (\n        <ContactListItem key={id} id={id} number={number} name={name} />\n      ))}\n    </List>\n  );\n};\n\nexport default ContactList;\n","import { Input, Label } from 'commonStyles/coommonStyles.styled';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <Label>\n      Find contacts by name\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        // value={filter}\n        onChange={e => dispatch(setFilter(e.target.value))}\n      />\n    </Label>\n  );\n};\n\nexport default Filter;\n","// import { useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { Helmet } from 'react-helmet';\n// import { TaskList } from 'components/TaskList/TaskList';\n// import { TaskEditor } from 'components/TaskEditor/TaskEditor';\n// import { fetchTasks } from 'redux/tasks/operations';\n// import { selectLoading } from 'redux/tasks/selectors';\n\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { Box } from '../commonStyles/Box';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  //   const dispatch = useDispatch();\n  //   const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {/* <Helmet>\n        <title>Your contacts</title>\n      </Helmet> */}\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n        gridGap={5}\n        as=\"section\"\n      >\n        <h1>Phonebook</h1>\n        {isLoading && !error && <b>Request in progress...</b>}\n        {error && <b>{error}</b>}\n        <ContactForm />\n      </Box>\n\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n        gridGap={5}\n        as=\"section\"\n      >\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </Box>\n    </>\n  );\n}\n"],"names":["selectContacts","state","contacts","selectIsLoading","isLoading","selectError","error","selectvisibleContacts","createSelector","filter","filterName","items","contact","name","toLowerCase","includes","trim","Form","styled","p","theme","space","Label","lineHeights","body","colors","gray","Input","borders","normal","radii","text","primary","Button","fontSizes","xs","ContactForm","useSelector","dispatch","useDispatch","className","onSubmit","e","preventDefault","target","value","number","find","alert","newContact","addContact","reset","type","pattern","title","required","List","Item","fontWeights","bold","s","ItemName","ContactWrap","id","fill","onClick","deleteContact","map","onChange","setFilter","ContactsPage","useEffect","fetchContacts","Box","display","flexDirection","alignItems","gridGap","as"],"sourceRoot":""}